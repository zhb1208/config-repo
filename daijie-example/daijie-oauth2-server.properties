spring.application.name=daijie-oauth2-server
server.port=12813

#eureka注册中心地址
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/
#是否设置注册优些IP地址
eureka.instance.preferIpAddress=true

feign.db-cloud=daijie-db-cloud

security.basic.enabled=false

server.session.timeout=300

spring.datasource.dataSourceType=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/oauth2?characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456

## Redis数据库索引（默认为0）
#spring.redis.database=0  
## Redis服务器地址
#spring.redis.host=localhost
## Redis服务器连接端口
#spring.redis.port=6379  
## Redis服务器连接密码（默认为空）
#spring.redis.password=  
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8  
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1  
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8  
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0  
## 连接超时时间（毫秒）
#spring.redis.timeout=0 

#是否开启redis集群
shiro.redis.cluster=false
#服务地址
shiro.redis.address=127.0.0.1:6379
#访问密码，没有则不用设置
#shiro.redis.password=
#默认连接超时时间
shiro.redis.connectionTimeout=5000
#返回值的超时时间
shiro.redis.timeout=5000
#默认存储超时时间
shiro.redis.expire=360000
#出现异常最大重试次数
shiro.redis.maxAttempts=1

#是否开启kisso cookie机制
shiro.kissoEnable=true
#加密随机码
kisso.config.signkey=C691d971EJ3H376G81
#cookie名称
kisso.config.cookieName=token
#cookie的作用域
kisso.config.cookieDomain=daijie.org

#用户授权登录请求接口
shiro.oauth2.loginUrl=http://daijie.org/login
#用户授权登录请求接口方式
shiro.oauth2.loginMethod=post
#请求权限
shiro.oauth2.matchersRole=/api/user/**=USER

#忽略已经添加的服务
zuul.ignored-services=*
#全局设置
zuul.sensitive-headers=
#监控路径
zuul.routes.api.path=/api/**
#重定向到指定服务
zuul.routes.api.serviceId=daijie-api-cloud
#为true时，访问/api/** = daijie-api-cloud/**，为false时，访问/api/** = daijie-api-cloud/api/**
zuul.routes.api.stripPrefix=true

#指定Log4j打印日志包路径的日志级别
logging.level.org.daijie=DEBUG

#对象转json串时，去除为null的属性
spring.jackson.default-property-inclusion=non_null
#指定jackson日期转换格式
spring.jackson.date-format=yyyy-MM-dd HH\:mm\:ss
#指定jackson日期转换时区
spring.jackson.time-zone=Asia/Shanghai

#设置zipkin监控地址
spring.zipkin.baseUrl=http://127.0.0.1:12809
#开启zipkin监控
spring.zipkin.enabled=true

#启用Spring Boot Admin Client
spring.boot.admin.client.enabled=true
#这是一个必填的属性，将当前程序的信息注册到Admin Server中，你需要给出Server URL地址，如果需要注册到多个Admin Server，可以用逗号分隔开来
spring.boot.admin.url=http\://localhost\:12812
#当客户端程序发起注册的时候，需要一个请求地址。
spring.boot.admin.api-path=api/application
#如果Admin端设置了用户名密码访问，你也需要在客户端配置它们。
spring.boot.admin.username=admin
spring.boot.admin.password=admin
#注册间隔（程序启动后多久发出注册请求
spring.boot.admin.period=10000
#如果设置成true，那么上面那个属性就不需要设置了，程序会自动在启动成功后立刻发出注册申请。
spring.boot.admin.auto-registration=true
#当Admin server关闭的时候，自动注销。
spring.boot.admin.auto-deregistration=true
#如果你注册到了多个Admin Server，当他为true的时候，则只会向一个admin server进行注册，否则会同时向所有的admin server进行注册
spring.boot.admin.register-once=true
#客户端的健康监测URL，可以重写（例如Docker中），但是必须唯一。
#spring.boot.admin.client.health-url=
#spring.boot.admin.client.management-url=
#spring.boot.admin.client.service-url=
#默认是false，意味着注册的时候，将会使用机器名进行注册，当设置为true的时候，将会用ip进行注册
spring.boot.admin.client.prefer-ip=false
#安全控制
management.security.enabled=false

eureka.instance.hostname=localhost
eureka.instance.metadata-map.cluster=MAIN

health.config.enabled=true